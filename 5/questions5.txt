1. Концепции ООП
а) Инкапсуляция(приватные данные, публичный интерфейс)
б) Полиморфизм (Одинаковый интерйфейс, разные реализации)
в) Наследование (Потомки(производный класс) наследуют свойства родителей(базовый класс))
2. а) Следует выделять секции public(доступно всем), private(доступно только внутри класса и "друзьям", не наследуется), protected (доступно только внутри класса и "друзьям", наследуется).
б) Объемные функции-методы или классы следует выносить в отдельные файлы.
в) Для улучшения инкапсуляции следует создавать переменные в секции private и взаимодействовать с ними через сеттеры(устанавливают значение)/геттеры(считывают значение),
 однако если для переменной есть и простейший геттер, и протейший сеттер ее стоит вынести в public и избавиться от них.
г) Для устанавления констант используемых в каждом объекте класса стоит испольховать static переменный.
3. Интерфейс позволяет контролировать, как пользователь будет работать с классом, что уменьшает число потенциальных ошибок. Также хороший интерфейс позволяет удобно работать с классом даже при сложной его реализации.
4. Внешнее связывание позволяет обращаться к объектам из других юнитов трансляции, а внутренее связывание означает, что к объекту можно обратиться только из юнита трансляции, где он находится.
5. а)Объекты из однного просторанства имен можно задавать в разных частях программы.
б) Можно создавть пространство имен в пространстве имен. 
в) Позволяют избежать одинаковых имен в больших проектах.