1. Шаблон - средство языка, позволяющее писать обобщенные алгоритмы без привязки к некоторым параметрам (например типам данных)
Разновидности шаблонов:
а) Функции
б) Класса
в) Псевдонима
г) Переменной
2.а) Во время определения код шаблона проверяется на корректность без подстановки конкретного типа(выявление синтаксических ошибок и применения неизвестных имен,
которые не зависят от параметров шаблона, выполнение проверок статических утверждений, не зависящих от параметров шаблона).
б) Во время инстанцирования код снова проверяется, но уже с подставленным типом.
3. При перегрузке шаблона функции компилятор предпочитает перегрузку, которая точнее подходит по сигнатуре.
4. Шаблоны классов отличаются от шаблонов функций тем, что их нельзя инстанцировать неявно, так как нет "вызова" класса,
где инстанцирование может произойти по аргументам, и для шаблонов классов инстанцируются только те функции-члены, которые реально вызываются в программе.
5. Полная или частичная специализация шаблона необходима, когда обобщенная реализация является более ресурсоемкой, чем реализация под конкретную структуру данных.
Дополнительный вопрос:
Специализация стандартного шаблона класса std::vector для bool имеет смысл с точки зрения оптимизации потребления памяти,
потому что переменная типа bool занимает минимум 1 байт памяти, а можно реализовать хранение одного значения bool в 1 бите.