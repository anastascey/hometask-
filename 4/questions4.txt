1.а)Присваивание, через "." или "->"
б)Инициализация по умолчанию
в)Агрегатная инициализация
г)С помощью конструкторов
2. Списки инициализации в конструкторах структур предназначены для того, чтобы задавать необходимые значения данных-членов структуры при инициализации, а не через присваивание.
3. Идиома RAII - захват ресурса есть инициализация. Мы захватываем ресурс при инициализации объекта, то есть в конструкторе, и используем его пока объект существует, а освобождаем ресурс при уничтожении объекта, то есть в деструкторе.
Примером является выделение памяти под объект структуры в конструкторе и освобождении этой памяти в деструкторе.
4. Битовые поля можно использовать для структур, в которых строго определены размеры данных-членов и под них можно выделить меньше стандартных 32 бит память, чтобы экономить память. Однако если память не будет выравнена, то это может
привести к потери быстродействия.
Объединения могут хранить в одной области выделенной памяти перменный разных типов, но только одну перменных в один момент. Их можно использовать для структур, когда необходим объект, в который можно записать данные разного типа,
и известно, что обращаться необходимо только к одному значению за раз. Например значения удобно использовать для обработки ошибок функции, потому что в них можно записать либо результат работы функции, либо текст ошибки.
5. а) При обращении к константам из перечисления с областью видимости необходимо использовать оператор разрешения области видимости(c = Color:: green)
б) Объекты созданные в перечислении с областью видимости не преобразуются неявно в int(для этого можно использовать static_cast)